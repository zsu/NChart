@{
    ViewBag.Title = "QuickStart";
}

<h1 id="chart-mvc">NChart</h1>
<p>This is a .net library to create charts.</p>
<h2 id="installation">Installation</h2>
<p>Install using Nuget or compile binary from <a href="https://github.com/zsu/NChart.git">https://github.com/zsu/NChart.git</a>.</p>
<pre><code>    PM&gt; Install-Package NChart
</code></pre>
<h2 id="how-do-i-use-it-">How to use it?</h2>
<p>To use the library you just need to:</p>
<ul>
    <li>include a reference to <em>Chart.Js</em> library (<a href="http://www.chartjs.org">http://www.chartjs.org</a>)</li>
    <li>insert a <strong>canvas</strong> in your HTML </li>
    <li>
        <p>call the method <strong>Html.CreateChart()</strong>, passing the canvas name and the chart object you want to use</p>
<pre><code>  @@{
      var barChart = new BarChart();
      barChart.ComplexData.Labels.AddRange(new []{ &quot;January&quot;, &quot;February&quot;,  &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;});
      barChart.ComplexData.Datasets.AddRange(new List&lt;ComplextDataset&gt;
                             { 
                                new ComplextDataset
                                    {
                                        Data = new List&lt;double&gt; { 65, 59, 80, 81, 56, 55, 40 },
                                        Label = &quot;My First dataset&quot;,
                                        FillColor = &quot;rgba(220,220,220,0.2)&quot;,
                                        StrokeColor = &quot;rgba(220,220,220,1)&quot;,
                                        PointColor = &quot;rgba(220,220,220,1)&quot;,
                                        PointStrokeColor = &quot;#fff&quot;,
                                        PointHighlightFill = &quot;#fff&quot;,
                                        PointHighlightStroke = &quot;rgba(220,220,220,1)&quot;,
                                    }, 
                                new ComplextDataset
                                    {
                                        Data = new List&lt;double&gt; { 28, 48, 40, 19, 86, 27, 90 },
                                        Label = &quot;My Second dataset&quot;,
                                        FillColor = &quot;rgba(151,187,205,0.2)&quot;,
                                        StrokeColor = &quot;rgba(151,187,205,1)&quot;,
                                        PointColor = &quot;rgba(151,187,205,1)&quot;,
                                        PointStrokeColor = &quot;#fff&quot;,
                                        PointHighlightFill = &quot;#fff&quot;,
                                        PointHighlightStroke = &quot;rgba(151,187,205,1)&quot;,
                                    }
                            });
  }
  &lt;canvas id=&quot;myCanvas&quot; width=&quot;400&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;
  @@Html.CreateChart(&quot;myCanvas&quot;, barChart)
</code></pre>
    </li>
</ul>
<p>
    The chart object contains information like chart type, labels, data and visualization options.
    Property names are the same of the original <em>Chart.Js</em>, so it should be easy to use them.
</p>
<p>Currently 7 types of <em>Charts.Js</em> charts are supported and fully configurable:</p>
<ul>
    <li>Line chart (<strong>LineChart</strong> class with <strong></strong>LineChartOptions)</li>
    <li>Bar chart (<strong>BarChart</strong> class with <strong>BarChartOptions</strong>)</li>
    <li>Horizontal Bar chart (<strong>HorizontalBarChart</strong> class with <strong>BarChartOptions</strong>)</li>
    <li>Radar chart (<strong>RadarChart</strong> class with <strong>RadarChartOptions</strong>)</li>
    <li>Polar area chart (<strong>PolarAreaChart</strong> class with <strong>PolarAreaChartOptions</strong>)</li>
    <li>Pie charts (<strong>PieChart</strong> class with <strong>PieChartOptions</strong>)</li>
    <li>Doughnut charts (<strong>DoughnutChart</strong> class with <strong>DoughnutChartOptions</strong>)</li>
</ul>

